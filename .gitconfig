# List of commands for use with `git log` and the `--pretty` flag:
# https://www.git-scm.com/docs/git-log#_pretty_formats

# List of colours for use with `git log` formatting:
# https://www.git-scm.com/docs/git-config#git-config-color

[alias]
  a = add
  ap = add --patch
  b = branch
  c = commit
  ca = commit --amend
  ch = checkout
  diffc = diff --cached
  last = log -1
  minitree = log --oneline --graph
  reb = rebase
  reba = rebase --abort
  rebc = rebase --continue
  rebi = rebase -i
  rebs = rebase --skip
  s = status -u
  size = count-objects -vH
  tags = tag --sort=taggerdate
  tree = log --pretty=format:'%C(yellow)commit %H%Creset%C(green)%d%Creset%nCommitter: %cn <%ce>%n%n%s%n%C(magenta)%cr (%cD)%Creset%n%n%b' --graph
  undo = reset --soft HEAD~
  unstage = reset HEAD .
  update = remote update --prune
  where = log -w --pretty=format:'%C(magenta)%cr%Creset %C(yellow)%h%Creset%C(green)%d%Creset%n%s%n' --branches --graph
[core]
  editor = /usr/bin/vim
  excludesfile = ~/.gitignore
[branch]
  autosetuprebase = always
[push]
  default = simple
