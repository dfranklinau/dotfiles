# Alias explanations:
#
# `diffc`
# Displays the diff of files that are staged for commit.
#
# `last`
# Displays the commit title, body and files changed for the most recent commit.
#
# `mergetest`
# Runs `git merge` with the `--no-commit` flag.
#
# `retro`
# Displays two weeks worth of commit history. More fun than useful.
#
# `sleuth`
# E.g.: `git sleuth -- <file>`
# See `where`. Performs an even deeper dive on a file in the repository across
# all branches and all history, including deleted files.
#
# `size`
# Displays file size information for the repository.
#
# `tag-sort`
# Lists all Git tags by creation date.
#
# `t`
# Short for "tree". Displays a log of commits, showing the title and body of all
# commits (displayed in a branch structure).
#
# `tb`
# Short for "tree big". See `t`. Functions similarly, but also displays a list
# of the files changed in each commit.
#
# `ts`
# Short for "tree small". See `t`. Functions similarly, but only displays the
# title of each commit.
#
# `undo`
# Undo the last commit on the current branch, keeping all files intact.
#
# `update`
# Fetch all branch updates from the remote repository.
#
# `where`
# E.g.: `git where -- <file>`
# Performs a deep dive on a file in the repository across all branches.

[alias]
  a = add
  ap = add --patch
  b = branch --column
  c = commit
  ca = commit --amend
  can = commit --amend --no-edit
  ch = checkout
  diffc = diff --cached
  last = log -1 --name-status
  mergetest = merge --no-commit
  pushfwl = push --force-with-lease
  reb = rebase
  reba = rebase --abort
  rebc = rebase --continue
  rebi = rebase -i
  rebs = rebase --skip
  retro = !git log --all --since='2 weeks ago' --author=$(git config user.email)
  s = status -sb
  size = count-objects -vH
  sleuth = log --all --full-history
  su = status -u
  tag-sort = tag --sort=creatordate
  t = log --pretty=format:'%C(yellow)commit %H%Creset%C(auto)%d%Creset%nCommitter: %cn <%ce>%n%n%s%n%C(magenta)%cr (%cD)%Creset%n%n%b' --graph
  tb = log --pretty=format:'%C(yellow)commit %H%Creset%C(auto)%d%Creset%nCommitter: %cn <%ce>%n%n%s%n%C(magenta)%cr (%cD)%Creset%n%n%b' --name-status --graph
  ts = log --oneline --graph
  undo = reset --soft HEAD~
  update = remote update --prune
  where = log --pretty=format:'%C(magenta)%cr%Creset %C(yellow)%h%Creset%C(auto)%d%Creset%n%s%n' --branches --follow
[core]
  editor = nvim
  excludesfile = ~/.gitignore
  ignorecase = false
  pager = less -F -X
[branch]
  autosetuprebase = always
[push]
  default = simple
[rerere]
	enabled = true
